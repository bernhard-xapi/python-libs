# actions can be run locally using act and docker, on Fedora 37 also with podman, using:
# https://github.com/nektos/act
# sudo dnf install -y act-cli podman-docker
# act --bind --container-daemon-socket $XDG_RUNTIME_DIR/podman/podman.sock -W .github/workflows/main.yml

name: Unit tests

concurrency:  # On new workflow, cancel old workflows from the same PR, branch or tag:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Checks can be skipped by adding "skip-checks: true" to a commit message,
# or requested by adding "request-checks: true" if disabled by default for pushes:
# https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks#skipping-and-requesting-checks-for-individual-commits
on: [push, pull_request]
env:
  PYTHONWARNINGS: "ignore:DEPRECATION"
  PIP_ROOT_USER_ACTION: "ignore"     # For local testing using act-cli
  PIP_NO_WARN_SCRIPT_LOCATION: "0"   # For local testing using act-cli
  PIP_DISABLE_PIP_VERSION_CHECK: "1" # Reduce noise in logs

jobs:
  test:
    strategy:
      # See: https://github.com/xenserver/python-libs/pull/26#discussion_r1179482169
      # max-parallel: 1
      # Want to get the results of all the tests, don't terminate all on a fail:
      fail-fast: false
      matrix:
        include:
        - python-version: '3.11'
          os: ubuntu-22.04
        - python-version: '3.12'
          os: ubuntu-22.04
        - python-version: '3.13'
          os: ubuntu-22.04
    runs-on: ${{ matrix.os }}
    env:
      COV_UPLOAD: ${{ '3.11' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed by diff-cover to get the changed lines: origin/master..HEAD
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python 2.7 from Ubuntu 20.04 using apt-get install
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: sudo apt-get update && sudo apt-get install -y python2-dev

      - name: Install missing cpio in containers of nektos/act
        if: ${{ github.actor == 'nektos/act'}}
        run: apt-get update && apt-get install -y cpio

      - name: Run tox to run pytest in the defined tox environments
        run: |
          pip install tox-gh-actions
          tox --workdir .github/workflows/.tox --recreate
        env:
          DIFF_COVERAGE_MIN: 0  # Let the reviewdog and codecov show uncovered lines

      - uses: aki77/reviewdog-action-code-coverage@v2
        continue-on-error: true
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}
        if:
          env.REVIEWDOG_GITHUB_API_TOKEN &&
          matrix.python-version == env.COV_UPLOAD &&
          github.actor != 'nektos/act'
        with:
          lcov_path: coverage.lcov
          github_token: ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}

      - name: Upload coverage reports to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        id: codecov
        if: |
          env.CODECOV_TOKEN && !cancelled() && github.actor != 'nektos/act' &&
          matrix.python-version == env.COV_UPLOAD
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - uses: codecov/test-results-action@v1
        if: ${{ !cancelled() && steps.codecov.outcome == 'success' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - if: |
          matrix.python-version == env.COV_UPLOAD &&
          github.actor != 'nektos/act' &&
          !cancelled()
        name: Upload coverage reports to Coveralls
        env:
          COVERALLS_FLAG_NAME: ${{ format('python{0}', steps.python.outputs.python-version ) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pip install coveralls && coveralls --service=github
        continue-on-error: true  # Coveralls.io is currently overloaded
